<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tmux | Jake McCrary]]></title>
  <link href="https://jakemccrary.com/blog/categories/tmux/atom.xml" rel="self"/>
  <link href="https://jakemccrary.com/"/>
  <updated>2023-01-14T16:39:06-06:00</updated>
  <id>https://jakemccrary.com/</id>
  <author>
    <name><![CDATA[Jake McCrary]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to display a message to all tmux clients]]></title>
    <link href="https://jakemccrary.com/blog/2019/01/27/how-to-display-a-message-to-all-tmux-clients/"/>
    <updated>2019-01-27T17:03:00-06:00</updated>
    <id>https://jakemccrary.com/blog/2019/01/27/how-to-display-a-message-to-all-tmux-clients</id>
    <content type="html"><![CDATA[<!-- Estimated time: 30 minutes -->


<!-- First Draft: 26 minutes -->


<!-- First edits: 14 minutes -->


<p>Lately, I&rsquo;ve been using <a href="https://github.com/tmux/tmux">tmux</a> a lot. This resulted in me figuring out how to get <a href="https://github.com/jakemcc/lein-test-refresh#notifications">lein-test-refresh</a> to send <a href="/blog/2019/01/06/notifications-with-tmux-and-lein-test-refresh/">notifications using tmux</a>.</p>

<p>The setup linked above works great for when I&rsquo;m doing work all by myself. It showed a problem when using ssh and tmux to pair with another developer. Instead of both developers receiving a notification, only one did. One is better than none but not ideal.</p>

<p>Below is a GIF showing the problem. Each window simulates a different developer.</p>

<p><img src="/images/tmux-pair-fail.gif" alt="tmux only showing one developer a notification" /></p>

<p>This wasn&rsquo;t too hard to fix. A little digging through the tmux manpage shows that <code>tmux display-message</code> takes an optional flag telling it which client receives the message. If we can get a list of all the clients then iterating over them and sending a message to each is straightforward.</p>

<p><code>tmux list-clients</code> give us this list. Below is the output.</p>

<pre><code>$ tmux list-clients
/dev/ttys002: 0 [78x41 xterm-256color] (utf8)
/dev/ttys006: 0 [78x42 xterm-256color] (utf8)
</code></pre>

<p>What we care about are the parts that look like <code>/dev/ttys002</code>. At first I used <code>cut</code> to grab these values but then I dug a bit deeper into the <code>tmux</code> manpage.</p>

<p>It turns out that you can specify a format to <code>tmux list-clients</code>. Running <code>tmux list-clients -F "#{client_name}"</code> gives us the output we care about.</p>

<pre><code>$ tmux list-clients -F "#{client_name}"
/dev/ttys002
/dev/ttys006
</code></pre>

<p>We can combine that with <code>xargs</code> to send a message to multiple clients.</p>

<p><img src="/images/tmux-xargs-example.gif" alt="tmux xargs example" /></p>

<p>That command is a bit much to put into <code>lein-test-refresh</code>&rsquo;s configuration so I shoved it in a script called <code>notify</code> and configured <code>lein-test-refresh</code> to use it. Script and GIF of that below. Now both you and your pair can get notifications.</p>

<pre><code class="bash">#!/bin/bash

USAGE="Usage: notify &lt;message&gt;

example: notify 'Tests passed!'"

if [ -z "$1" ]; then
    echo "$USAGE"
    exit 1
fi

message="$1"

tmux list-clients -F "#{client_name}" \
    | xargs -n1 -I{} tmux display-message -c {} "$message"
</code></pre>

<p><img src="/images/tmux-notify-script.gif" alt="Example using notify script" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notifications with tmux and lein-test-refresh]]></title>
    <link href="https://jakemccrary.com/blog/2019/01/06/notifications-with-tmux-and-lein-test-refresh/"/>
    <updated>2019-01-06T16:55:00-06:00</updated>
    <id>https://jakemccrary.com/blog/2019/01/06/notifications-with-tmux-and-lein-test-refresh</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been using Emacs in a remote <a href="https://github.com/tmux/tmux">tmux</a> session lately and I&rsquo;ve been missing <a href="https://github.com/jakemcc/lein-test-refresh#notifications">lein-test-refresh</a> notifications when my Clojure tests pass or fail. Luckily, it only took me a little bit of searching to figure out a solution for when I&rsquo;m working inside of tmux.</p>

<p>Below is a GIF of the notifications I get as my tests run and pass or fail.</p>

<p><img src="/images/tmux-test-refresh.gif" title="tmux and test-refresh notifications" alt="tmux and test-refresh notifications" /></p>

<p>With the above notifications, I can keep my focus on my code and only switch to the tmux window with <code>lein test-refresh</code> running when a test fails.</p>

<p>This was pretty easy to setup. You can trigger a message in tmux by running <code>tmux display-message &lt;MESSAGE_HERE&gt;</code>. To configure <a href="https://github.com/jakemcc/lein-test-refresh#notifications">lein-test-refresh</a> to send notifications to tmux simply include the following in your <code>:test-refresh</code> section of your <code>project.clj</code> or <code>profiles.clj</code>.</p>

<pre><code class="clojure">:test-refresh {:notify-command ["tmux" "display-message"]}
</code></pre>

<p>I hope you enjoy this. Its has made using a remote terminal with tmux and <a href="https://github.com/jakemcc/lein-test-refresh">lein-test-refresh</a> more enjoyable.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making tmate and tmux play nice with OS X terminal-notifier]]></title>
    <link href="https://jakemccrary.com/blog/2015/04/12/making-tmate-and-tmux-play-nice-with-os-x-terminal-notifier/"/>
    <updated>2015-04-12T17:47:00-05:00</updated>
    <id>https://jakemccrary.com/blog/2015/04/12/making-tmate-and-tmux-play-nice-with-os-x-terminal-notifier</id>
    <content type="html"><![CDATA[<p>For nearly the last two years, I&rsquo;ve been doing most of my development
in OS X. Most of that development has been done in Clojure and,
whenever possible, using
<a href="https://github.com/jakemcc/lein-test-refresh">lein-test-refresh</a> with
<a href="https://github.com/alloy/terminal-notifier">terminal-notifier</a> to
have my tests automatically run and a notification shown with the
status of the test run. Its a great work flow that gives me a quick
feedback cycle and doesn&rsquo;t pull my attention in different directions.</p>

<p>Recently I&rsquo;ve started using <a href="http://tmate.io/">tmate</a> for remote
pairing. Unfortunately when I first started using it my quick feedback
cycle was broken. <code>lein test-refresh</code> would run my tests but would
become hung when sending a notification using <code>terminal-notifier</code>.
This was terrible and, if I hadn&rsquo;t been able to fix it, would have
stopped me from using <code>tmate</code>. After some searching I stumbled across
<a href="https://github.com/alloy/terminal-notifier/issues/115">this</a> GitHub
issue which helped solve the problem.</p>

<p>To make <code>tmate</code> work nicely with <code>terminal-notifier</code> you&rsquo;ll need
to install
<a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard">reattach-to-user-namespace</a>
and change your <code>tmate</code> configuration to use it. If you use <code>brew</code> you
can install by running <code>brew install --with-wrap-pbcopy-and-pbpaste
reattach-to-user-namespace</code>. Then open your <code>.tmux.conf</code> or
<code>.tmate.conf</code> file and add the line below.</p>

<pre><code>set-option -g default-command "which reattach-to-user-namespace &gt; /dev/null &amp;&amp; reattach-to-user-namespace -l $SHELL || $SHELL"
</code></pre>

<p>The above tells <code>tmate</code> to use <code>reattach-to-user-namespace</code> if it is
available. Now <code>terminal-notifier</code> no longer hangs when invoked inside
<code>tmate</code>. Unsurprisingly, this change also makes <code>tmux</code> place nice with
<code>terminal-notifier</code>.</p>
]]></content>
  </entry>
  
</feed>
