<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: utilities | Jake McCrary]]></title>
  <link href="http://jakemcc.github.com/blog/categories/utilities/atom.xml" rel="self"/>
  <link href="http://jakemcc.github.com/"/>
  <updated>2012-04-13T22:16:09-05:00</updated>
  <id>http://jakemcc.github.com/</id>
  <author>
    <name><![CDATA[Jake McCrary]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Utilities I like: autojump]]></title>
    <link href="http://jakemcc.github.com/blog/2011/07/25/utilities-i-like-autojump/"/>
    <updated>2011-07-25T00:00:00-05:00</updated>
    <id>http://jakemcc.github.com/blog/2011/07/25/utilities-i-like-autojump</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/joelthelion/autojump">autojump</a> is a nifty command line tool that enables quicker jumping between directories. I've been using it for a few months now and miss it when I work other machines.</p>

<p>To jump to a directory you type <code>j SUBSTRING_OF_DIR</code>. Example:</p>

<p>``` bash</p>

<pre><code>$ pwd
/Users/jmccrary
$ j jake
/Users/jmccrary/src/github/jakemcc/jakemccrary.com
$ pwd
/Users/jmccrary/src/github/jakemcc/jakemccrary.com
</code></pre>

<p>```</p>

<p>Above I jumped from my home directory to the root of this website's code. Being able to jump between directories by just remembering a name (or part of a name) is great. This frees me from having to remember full paths or set up aliases.</p>

<p>autojump works by keeping a database of "time" spent in directories and jumps to the most frequently visited one that match <code>SUBSTRING_OF_DIR</code>. If you are curious as to what that database looks like the tool <code>jumpstat</code> will give you a view.</p>

<p>I used to set up aliases for jumping between projects but now that I've trained myself to use autojump I don't think I'll ever go back. Not having to do any extra work besides simply entering the root directory of new projects to setup efficient directory movement is great. I think that if you give it a shot for a while you'll find the same benefits.</p>

<p>If you are on a Mac and use <a href="https://github.com/mxcl/homebrew">homebrew</a> you can install by doing <code>brew install autojump</code>. For other platforms check out the <a href="https://github.com/joelthelion/autojump">github</a> page.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A simple way of testing disconnect logic]]></title>
    <link href="http://jakemcc.github.com/blog/2011/06/28/a-simple-way-of-testing-disconnect-logic/"/>
    <updated>2011-06-28T00:00:00-05:00</updated>
    <id>http://jakemcc.github.com/blog/2011/06/28/a-simple-way-of-testing-disconnect-logic</id>
    <content type="html"><![CDATA[<p>I'm guessing that software you write connects to some other server. I'm also guessing that how it handles disconnects is tested (if ever tested) by either killing the process it connects to or by pulling out your network cable. I recently stumbled across a nifty Linux command line tool that makes causing disconnects significantly easier.</p>

<p>This tool is <a href="http://linux.die.net/man/8/tcpkill">tcpkill</a>. To use <code>tcpkill</code> you specify an interface and a <a href="http://linux.die.net/man/8/tcpdump">tcpdump</a> style filter and it kills traffic on that interface that matches the filter.</p>

<p>For example, if your application has a connection to 192.168.1.130, then to force a disconnect you would execute <code>tcpkill -i eth0 host 192.168.1.130</code>.</p>

<p><code>tcpkill</code> can be used for more than forcing disconnects. It can also be used as a simple website filter. If <a href="http://stackoverflow.com">Stack Overflow</a> wastes too much of your time then you could simply leave <code>tcpkill -i eth0 host stackoverflow.com</code> running and enjoy your increased productivity.</p>

<p><code>tcpkill</code> is a pretty useful tool. If you want to install it in Ubuntu it is found in the dsniff package (<code>apt-get install dsniff</code>).</p>
]]></content>
  </entry>
  
</feed>
